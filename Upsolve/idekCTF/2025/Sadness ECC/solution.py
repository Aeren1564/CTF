from CTF_Library import *

n = 18462925487718580334270042594143977219610425117899940337155124026128371741308753433204240210795227010717937541232846792104611962766611611163876559160422428966906186397821598025933872438955725823904587695009410689230415635161754603680035967278877313283697377952334244199935763429714549639256865992874516173501812823285781745993930473682283430062179323232132574582638414763651749680222672408397689569117233599147511410313171491361805303193358817974658401842269098694647226354547005971868845012340264871645065372049483020435661973539128701921925288361298815876347017295555593466546029673585316558973730767171452962355953
R = Zmod(n)

with remote("sad-ecc.chal.idek.team", 1337) as io:
	io.sendlineafter(b"> ", b"2")
	io.readuntil(b": ")
	sums = ast.literal_eval(io.readlineS().strip())
	a, b = R["a, b"].gens()
	basis = Ideal([
		a**3 + a**2 + 1337 - sums[0],
		b**3 + b**2 + 1337 - sums[1],
		(-a * b)**3 + (-a * b)**2 * (a + b) + (1337 - sums[2]) * (a + b)**3
	]).groebner_basis()
	a, b = -basis[0].coefficients()[1], -basis[1].coefficients()[1]
	c = -a * b / (a + b)
	P = a**3, a**2 + 1337
	Q = b**3, b**2 + 1337
	R = c**3, c**2 + 1337
	io.sendlineafter(b": ", str([P, Q, R]).encode())
	print(io.readallS(timeout = 1).strip())

"""
a^3 + a^2 + 1337 - sums[0] = 0
b^3 + b^2 + 1337 - sums[1] = 0
(-ab)^3 + (-ab)^2 * (a+b) + (1337 - sums[2]) * (a+b)^3 = 0
"""
