from Crypto.Util.number import bytes_to_long

p = 6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151
a = b'ictf{REDACTED}'

assert((p - bytes_to_long(a)) > 0 )

def devious_hash(pt):
    A = bytes_to_long(pt)
    hashed = 0
    for i in range(8):
        hashed += A
        hashed &= p
        hashed = pow(hashed,2,p)
    return hashed
print(devious_hash(a))

#output is 5529146955026504451007428379478468505767752969729288045439800587429289159437142456530335848325725612485348038928038452092595039114633083434109252927938183950



