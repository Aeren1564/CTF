from CTF_Library import *
from Crypto.PublicKey import RSA

# gpg --list-packets --debug 2 pub.asc
n = int("6FE4DBA45F9D40226FEF01F4FA4039EEA9A9001266C4730F14DF7FAAC4A086046A9246425DD0B0328CF51540D2CFBC31E0B73FDEA75EE49E178CC4A555D83B9E99C28980FF420B7FF9B8A02E7F26B38EB3DD40E519D4CEA7804D6B9172198778D3FC8DA2D2D225FD3ED7AAFB2F5262B70F3C313E2DF7944CA678D10E5659C43F", 16)
e = int("10001", 16)

# gpg --list-packets --debug 2 enc.asc
enc = bytes.fromhex("042FF6B422FDFA142CE7802699F895120BC9AD8C4925D603BDE4D9920C5400962792F0CCD48DE0A4249EC16357A66F16A5585ECDD72ED690FFAB1AB362231520A2D6F683703E1948F6FBCF0A9AB8AFDEF076EAE4490E55DC45B41AF6741340A597D68725FD1A473EAA5EF81E47F4D2C72029736A24311DAC75C02320024F2237")

p = fermat_factorization(n)
q = n // p
assert n == p * q
assert is_prime(p)
assert is_prime(q)

print(p)
print(q)
