

# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1000 = Integer(1000); _sage_const_0p75872961153339387563860550178464795474547887323678173252494265684893323654606628651427151866818730100357590296863274236719073684620030717141521941211167282170567424114270941542016135979438271439047194028943997508126389603529160316379547558098144713802870753946485296790294770557302303874143106908193100 = RealNumber('0.75872961153339387563860550178464795474547887323678173252494265684893323654606628651427151866818730100357590296863274236719073684620030717141521941211167282170567424114270941542016135979438271439047194028943997508126389603529160316379547558098144713802870753946485296790294770557302303874143106908193100'); _sage_const_2783326522220000911479336891554147920203385276446989039767325280368234708901555389135780831107328464160121081591574217032646087236492773630799059927175188525645899013909888650094959180514907229722274858515954100475721445677065011500417571899233872280976035755006483009982758774392151129612735169785010000000000000000000000000000000000000000000000 = Integer(2783326522220000911479336891554147920203385276446989039767325280368234708901555389135780831107328464160121081591574217032646087236492773630799059927175188525645899013909888650094959180514907229722274858515954100475721445677065011500417571899233872280976035755006483009982758774392151129612735169785010000000000000000000000000000000000000000000000); _sage_const_10 = Integer(10); _sage_const_300 = Integer(300); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
from sage.all import *
from Crypto.Util.number import long_to_bytes as ltb

R = RealField(_sage_const_1000 ) # 301 chiffres en base 10
x = R(_sage_const_0p75872961153339387563860550178464795474547887323678173252494265684893323654606628651427151866818730100357590296863274236719073684620030717141521941211167282170567424114270941542016135979438271439047194028943997508126389603529160316379547558098144713802870753946485296790294770557302303874143106908193100 )

s = _sage_const_2783326522220000911479336891554147920203385276446989039767325280368234708901555389135780831107328464160121081591574217032646087236492773630799059927175188525645899013909888650094959180514907229722274858515954100475721445677065011500417571899233872280976035755006483009982758774392151129612735169785010000000000000000000000000000000000000000000000 
cos_x = int(cos(x) * _sage_const_10 **_sage_const_300 )
sin_x = int(sin(x) * _sage_const_10 **_sage_const_300 )

K = _sage_const_10 **_sage_const_300 
M = Matrix([
    [_sage_const_1 , _sage_const_0 , _sage_const_0 , cos_x*K],
    [_sage_const_0 , _sage_const_1 , _sage_const_0 , sin_x*K],
    [_sage_const_0 , _sage_const_0 , _sage_const_1 , s*K],
])

llled = M.LLL().rows()[_sage_const_0 ]
print(llled)
flag = ltb(abs(int(llled[_sage_const_0 ]))) + ltb(abs(int(llled[_sage_const_1 ])))
print(flag)

