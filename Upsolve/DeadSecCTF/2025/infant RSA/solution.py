from CTF_Library import *

n=144984891276196734965453594256209014778963203195049670355310962211566848427398797530783430323749867255090629853380209396636638745366963860490911853783867871911069083374020499249275237733775351499948258100804272648855792462742236340233585752087494417128391287812954224836118997290379527266500377253541233541409
c=120266872496180344790010286239079096230140095285248849852750641721628852518691698502144313546787272303406150072162647947041382841125823152331376276591975923978272581846998438986804573581487790011219372437422499974314459242841101560412534631063203123729213333507900106440128936135803619578547409588712629485231
hint=867001369103284883200353678854849752814597815663813166812753132472401652940053476516493313874282097709359168310718974981469532463276979975446490353988

s = n - hint + 1

x = ZZ["X"].gen()

for t in range(2**11, 2**20):
	s = (n - hint + 1) % 2**500 + t * 2**500
	for root, mul in (x**2 - s * x + n).roots():
		if 2 <= root and n % root == 0:
			p, q = root, n // root
			print(long_to_bytes(RSA_decrypt([p, q], 65537, c)[0]))
			exit()
