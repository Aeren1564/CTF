from CTF_Library import *
from Crypto.Util.number import *
from hashlib import sha224
from Crypto.Cipher import AES

p =  148982911401264734500617017580518449923542719532318121475997727602675813514863
g =  2
y =  99943368625476277151400768907519717344447758596311103260066302523387843692499

messages = [
  b"Never gonna give you up", # first 96 bits and last 80 bits same as 4
  b"Never gonna let you down", # first 96 bits and last 64 bits same as 3 
  b"Never gonna run around and desert you",
  b"Never gonna make you cry",
  b"Never gonna say goodbye",
  b"Never gonna tell a lie and hurt you"
]

signs = [
	(82164720827627951718117576622367372918842412631288684063666489980382312886875, 20555462814568596793812771425415543791560033744700837082533238767135),
	(121728190859093179709167853051428045020048650314914045286511335302789797110644, 18832686601255134631820635660734300367214611070497673143677605724980),
	(146082371876690961814167471199278995325899717136850705507399907858041424152875, 17280327447912166881602972638784747375738574870164428834607749483679),
	(70503066417308377066271947367911829721247208157460892633371511382189117698027, 18679076989831101699209257375687089051054511859966345809079812661627),
	(129356717302185231616252962266443899346987025366769583013987552032290057284641, 2084781842220461075274126508657531826108703724816608320266110772897),
	(12183293984655719933097345580162258768878646698567137931824149359927592074910, 15768525934046641405375930988120401106067516205761039338919748323087)
]

ct = bytes.fromhex("e426c232b20fc298fb4499a2fff2e248615a379c5bc1a7447531f8a66b13fb57e2cf334247a0589be816fc52d80c064b61fa60261e925beb34684655278955e0206709f95173ad292f5c60526363766061e37dd810ee69d1266cbe5124ae18978214e8b39089b31cad5fd91b9a99e344830b76d456bbf92b5585eebeaf85c990")
iv = bytes.fromhex("563391612e7c7d3e6bd03e1eaf76a0ba")

s = [x[0] for x in signs]
e = [x[1] for x in signs]

# (1, x, -y0, -y1, 0, 0) as vec
lattice_data = [
	[1, 0, 0, 0, s[4] - s[0], s[3] - s[1]],
	[0, 1, 0, 0, e[4] - e[0], e[3] - e[1]],
	[0, 0, 1, 0, 2**96,       0          ],
	[0, 0, 0, 1, 0,           2**96      ],
	[0, 0, 0, 0, p - 1,       0          ],
	[0, 0, 0, 0, 0,           p - 1      ]
]

lower_bound = [1, 0, -2**88, -2**96, 0, 0]
upper_bound = [2, p, 0, 0, 1, 1]

close_vector = solve_inequality_with_CVP(lattice_data, lower_bound, upper_bound)

print(close_vector)

x = int(close_vector[1])

key = sha224(long_to_bytes(x)).digest()[:16]

cipher = AES.new(key, AES.MODE_CBC, iv)

print(cipher.decrypt(ct))